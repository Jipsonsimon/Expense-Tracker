{"version":3,"sources":["Components/Details/styles.js","context/contextReducer.js","context/context.js","constants/categories.js","useTransactions.js","Components/Details/Details.jsx","Components/Details/Main/styles.js","Components/Details/Main/Form/styles.jsx","utils/formatDate.js","Components/Snackbar/styles.js","Components/Snackbar/Snackbar.jsx","Components/Details/Main/Form/Form.jsx","Components/Details/Main/List/styles.js","Components/Details/Main/List/List.jsx","Components/InfoCard.jsx","Components/Details/Main/Main.jsx","styles.js","App.js","index.js"],"names":["makeStyles","income","borderBottom","expense","contextReducer","state","action","transactions","type","filter","t","id","payload","localStorage","setItem","JSON","stringify","initialState","parse","getItem","ExpenseTrackerContext","createContext","Provider","children","useReducer","conextReducer","dispatch","balance","reduce","acc","currVal","amount","value","deleteTransaction","addTransaction","transaction","incomeColors","expenseColors","incomeCategories","color","expenseCategories","useTransactions","title","forEach","c","transactionsPerType","useContext","total","categories","console","log","category","find","filteredCategories","chartData","datasets","data","map","backgroundColor","labels","Details","classes","useStyles","Card","className","CardHeader","CardContent","Typography","variant","theme","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","cartContent","divider","margin","radioGroup","display","justifyContent","marginBottom","button","marginTop","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","root","width","spacing","CustomizedSnackbar","open","setOpen","handleClose","event","reason","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","severity","elevation","Form","useState","formData","setFormData","segment","useSpeechContext","createTransaction","Number","isNaN","includes","uuidv4","useEffect","intent","isFinal","entities","e","charAt","slice","toLocaleLowerCase","iC","selectedCategories","Grid","container","item","xs","align","gutterBottom","words","w","FormControl","fullwidth","InputLabel","Select","onChange","target","MenuItem","TextField","label","Button","onClick","avatarIncome","green","avatarExpense","palette","getContrastText","red","list","maxHeight","overflow","List","dense","Slide","direction","in","mountonEnter","unmountOnExit","ListItem","ListItemAvatar","Avatar","MoneyOff","ListItemText","primary","secondary","ListItemSecondaryAction","IconButton","edge","Delete","isIncome","Math","round","random","InfoCard","style","textAlign","padding","Main","subheader","lineHeight","Divider","desktop","breakpoints","up","mobile","down","main","paddingBottom","last","grid","App","speechState","useRef","SpeechState","Recording","curret","scrollIntoView","alignItem","justify","sm","ef","ReactDOM","render","appId","language","document","getElementById"],"mappings":"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","file":"static/js/main.5e307f21.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core';\r\n\r\nexport default makeStyles(() => ({\r\n    income:{\r\n        borderBottom:'10px solid rgba(0,255,0,0.5)',\r\n        \r\n    },\r\n    expense:{\r\n        borderBottom:'10px solid rgba(255,0,0,0.5)',\r\n    }\r\n\r\n})); "," const contextReducer = (state, action) => {\r\n    let transactions;\r\n     switch (action.type) {\r\n         case 'DELETE_TRANSACTION':\r\n             transactions = state.filter((t) => t.id !== action.payload);   \r\n\r\n             localStorage.setItem('transactions', JSON.stringify(transactions));\r\n\r\n            return transactions;\r\n        case 'ADD_TRANSACTION' :\r\n             transactions = [action.payload, ...state];\r\n\r\n             localStorage.setItem('transactions', JSON.stringify(transactions));\r\n            return transactions;\r\n        default:\r\n            return state;\r\n     }\r\n    \r\n }\r\n\r\n export default contextReducer;","import React, { useReducer, createContext } from 'react';\r\nimport conextReducer from './contextReducer';\r\n\r\nconst initialState = JSON.parse(localStorage.getItem('transactions')) || [[{\"amount\":300,\"category\":\"Deposits\",\"type\":\"Income\",\"date\":\"2021-10-04\",\"id\":\"88a19b59-73ec-4911-ad30-8544847b571b\"}]];\r\n\r\nexport const ExpenseTrackerContext = createContext(initialState);\r\n\r\nexport const Provider =({ children }) => {\r\n    const [transactions, dispatch] = useReducer(conextReducer, initialState);\r\n    \r\n        const deleteTransaction = (id) => dispatch ({type: 'DELETE_TRANSACTION', payload: id });\r\n        \r\nconst addTransaction = (transaction) => {\r\n    dispatch({ type: 'ADD_TRANSACTION', payload: transaction });\r\n}\r\nconst balance = transactions.reduce((acc, currVal) => currVal.type === 'Expense' ? acc - currVal.amount : acc + currVal.amount ,0);\r\n\r\n\r\n    return(\r\n        <ExpenseTrackerContext.Provider value ={{ \r\n            deleteTransaction,\r\n            addTransaction,\r\n            transactions,\r\n            balance\r\n            }}>\r\n            {children}\r\n        </ExpenseTrackerContext.Provider>\r\n    );\r\n}","const incomeColors = ['#123123', '#154731', '#165f40', '#16784f', '#14915f', '#10ac6e', '#0bc77e', '#04e38d', '#00ff9d'];\r\nconst expenseColors = ['#b50d12', '#bf2f1f', '#c9452c', '#d3583a', '#dc6a48', '#e57c58', '#ee8d68', '#f79d79', '#ffae8a', '#cc474b', '#f55b5f'];\r\n\r\nexport const incomeCategories = [\r\n  { type: 'Business', amount: 0, color: incomeColors[0] },\r\n  { type: 'Investments', amount: 0, color: incomeColors[1] },\r\n  { type: 'Extra income', amount: 0, color: incomeColors[2] },\r\n  { type: 'Deposits', amount: 0, color: incomeColors[3] },\r\n  { type: 'Lottery', amount: 0, color: incomeColors[4] },\r\n  { type: 'Gifts', amount: 0, color: incomeColors[5] },\r\n  { type: 'Salary', amount: 0, color: incomeColors[6] },\r\n  { type: 'Savings', amount: 0, color: incomeColors[7] },\r\n  { type: 'Rental income', amount: 0, color: incomeColors[8] },\r\n];\r\n\r\nexport const expenseCategories = [\r\n  { type: 'Bills', amount: 0, color: expenseColors[0] },\r\n  { type: 'Car', amount: 0, color: expenseColors[1] },\r\n  { type: 'Clothes', amount: 0, color: expenseColors[2] },\r\n  { type: 'Travel', amount: 0, color: expenseColors[3] },\r\n  { type: 'Food', amount: 0, color: expenseColors[4] },\r\n  { type: 'Shopping', amount: 0, color: expenseColors[5] },\r\n  { type: 'House', amount: 0, color: expenseColors[6] },\r\n  { type: 'Entertainment', amount: 0, color: expenseColors[7] },\r\n  { type: 'Phone', amount: 0, color: expenseColors[8] },\r\n  { type: 'Pets', amount: 0, color: expenseColors[9] },\r\n  { type: 'Other', amount: 0, color: expenseColors[10] },\r\n];\r\n\r\nexport const resetCategories = () => {\r\n  incomeCategories.forEach((c) => c.amount = 0);\r\n  expenseCategories.forEach((c) => c.amount = 0);\r\n};","import { useContext } from \"react\";\r\nimport { ExpenseTrackerContext } from \"./context/context\";\r\nimport { incomeCategories, expenseCategories, resetCategories } from \"./constants/categories\";\r\n\r\n \r\n\r\nconst useTransactions = (title) => {\r\n    resetCategories();\r\n    const { transactions } = useContext(ExpenseTrackerContext);\r\n    const transactionsPerType = transactions.filter((t) => t.type === title);\r\n    const total = transactionsPerType.reduce((acc, currVal) => acc += currVal.amount, 0) ;\r\n    const categories = title === 'Income' ? incomeCategories : expenseCategories;\r\n    \r\n    console.log({ transactionsPerType, total, categories });\r\n\r\n    transactionsPerType.forEach((t) => {\r\n        const category = categories.find((c) => c.type === t.category)\r\n\r\n        if(category) category.amount += t.amount;\r\n    });\r\n    const filteredCategories = categories.filter((c) => c.amount > 0);\r\n\r\n    const chartData = {\r\n        datasets: [{\r\n            data: filteredCategories.map((c) => c.amount),\r\n            backgroundColor: filteredCategories.map((c) => c.color)\r\n        }],\r\n        labels: filteredCategories.map((c) => c.type)\r\n    }\r\n    return  { total, chartData }\r\n}\r\nexport default useTransactions;","import React from 'react'\r\nimport { Card, CardHeader, CardContent, Typography } from '@material-ui/core';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport useStyles from './styles';\r\nimport useTransactions from '../../useTransactions';\r\n\r\n\r\nconst Details = ({ title }) => {\r\n    const classes = useStyles();\r\n    const { total, chartData } = useTransactions(title);\r\n\r\n\r\n    return (\r\n    <Card className={ title === 'Income' ? classes.income : classes.expense}>\r\n        <CardHeader title={title} />\r\n        <CardContent>\r\n            <Typography variant=\"h5\">${total}</Typography>\r\n            <Doughnut data ={chartData} />\r\n        </CardContent>\r\n    </Card>\r\n    );\r\n}\r\n\r\nexport default Details;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  cartContent: {\r\n    paddingTop: 0,\r\n  },\r\n  divider: {\r\n    margin: '20px 0',\r\n  },\r\n}));","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles(() => ({\r\n  radioGroup: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    marginBottom: '-10px',\r\n  },\r\n  button: {\r\n    marginTop: '20px',\r\n  },\r\n}));","const formatDate = (date) => {\r\n\r\n    const d = new Date(date);\r\n    let month = `${d.getMonth() + 1 }`;\r\n    let day = `${d.getDate()}`;\r\n    const year = d.getFullYear();\r\n\r\n    if(month.length < 2) {\r\n        month = `0${month}`\r\n    }\r\n    if(day.length < 2) {\r\n        day = `0${day}`\r\n    }\r\n\r\n    return [year, month, day ].join('-');\r\n}\r\nexport default formatDate;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));"," import React from 'react';\r\n import Snackbar from '@material-ui/core/Snackbar';\r\n import MuiAlert from '@material-ui/lab/Alert';\r\n\r\n import useStyles  from './styles';\r\n\r\n\r\n \r\n const CustomizedSnackbar = ({ open,setOpen }) => {\r\n     const classes = useStyles();\r\n\r\n     const handleClose = (event, reason) => {\r\n         if(reason === 'clickaway') return;\r\n\r\n         setOpen(false);\r\n     }\r\n     return (\r\n         <div className={classes.root}>\r\n             <Snackbar\r\n                anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                open={open}\r\n                autoHideDuration={3000}\r\n                onClose={handleClose}\r\n             >\r\n                 <MuiAlert onClose={handleClose} severity='success' elevation={6} variant=\"filled\">\r\n                     Transaction successfully created\r\n                 </MuiAlert>\r\n             </Snackbar>\r\n         </div>\r\n     )\r\n }\r\n \r\n export default CustomizedSnackbar;\r\n ","import React, { useState, useEffect, useContext }  from 'react'\r\nimport { TextField, Typograpghy, Grid, Button, FormControl, InputLabel, Select, MenuItem, Typography } from '@material-ui/core'\r\nimport useStyles from './styles';\r\nimport { ExpenseTrackerContext } from '../../../../context/context';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { incomeCategories, expenseCategories} from '../../../../constants/categories';\r\nimport formatDate from '../../../../utils/formatDate';\r\nimport { useSpeechContext } from '@speechly/react-client';\r\nimport CustomizedSnackbar from '../../../Snackbar/Snackbar';\r\n\r\nconst initialState = {\r\n    amount: '',\r\n    category: '',\r\n    type: 'Income',\r\n    date: formatDate(new Date()),\r\n};\r\n\r\nconst Form = () => {\r\n    const classes = useStyles();\r\n     const [formData, setFormData] = useState(initialState)\r\n     const { addTransaction } = useContext(ExpenseTrackerContext);\r\n    const { segment } =useSpeechContext();\r\n    const [ open, setOpen]  = useState(false)\r\n\r\n     const createTransaction = () => {\r\n         if (Number.isNaN(Number(formData.amount)) || !formData.date.includes('-')) return;\r\n         const transaction = { ...formData, amount: Number(formData.amount), id: uuidv4() }\r\n            setOpen(true);  \r\n         addTransaction(transaction);\r\n            setFormData(initialState);\r\n     }\r\n\r\n     useEffect(() => {\r\n         if(segment) {\r\n            if(segment.intent.intent === 'add_expense') {\r\n                setFormData({ ...formData, type: 'Expense' });\r\n            } else if(segment.intent.intent === 'add_income') {\r\n                setFormData({ ...formData, type: 'Income' });\r\n            } else if (segment.isFinal && segment.intent.intent === \"create_transaction\" ) {\r\n                return createTransaction();\r\n            } else if (segment.isFinal && segment.intent.intent === \"cancel_transaction\" ) {\r\n                return setFormData(initialState);\r\n            }\r\n            segment.entities.forEach((e) => {\r\n                const category = `${e.value.charAt(0)}${e.value.slice(1).toLocaleLowerCase()}`\r\n\r\n                switch (e.type) {\r\n                    case 'amount':\r\n                        setFormData({ ... formData, amount:e.value });\r\n                        break;\r\n                    case 'category':\r\n                        if (incomeCategories.map((iC) => iC.type).includes(category)) {\r\n                        \r\n                        setFormData({ ...formData, type: 'Income',category  });\r\n                        } else if (incomeCategories.map((iC) => iC.type).includes(category)) {\r\n                            setFormData({ ...formData, type: 'Expense',category  });\r\n                        }\r\n                        break;\r\n                    \r\n                    case 'date':\r\n                        setFormData({ ...formData, date: e.value });\r\n                        break;\r\n                    default:\r\n                        break;\r\n                        \r\n                }\r\n            });\r\n            if (segment.isFinal && formData.amount && formData.category && formData.category && formData.type && formData.date)\r\n                createTransaction(); \r\n         }\r\n\r\n     }, [segment]);\r\n\r\n     const selectedCategories = formData.type === 'Income' ? incomeCategories : expenseCategories;\r\n    return (\r\n       <Grid container spacing={2}>\r\n           <CustomizedSnackbar open={open} setOpen={setOpen} />\r\n           <Grid item xs={12}>\r\n               <Typography align=\"center\" variant=\"subtitle2\" gutterBottom>\r\n                    {segment && segment.words.map((w) => w.value).join(\" \")} \r\n               </Typography>\r\n           </Grid>\r\n           <Grid item xs={6}>\r\n               <FormControl fullwidth>\r\n                   <InputLabel>Type</InputLabel>\r\n                   <Select value={formData.type} onChange={(e) => setFormData({ ...formData, type: e.target.value })}>\r\n                       <MenuItem value=\"Income\">Income</MenuItem>\r\n                       <MenuItem value=\"Expense\">Expense</MenuItem>\r\n                   </Select>\r\n               </FormControl>\r\n\r\n           </Grid >\r\n           <Grid item xs={6}>\r\n                <FormControl fullwidth>\r\n                    <label>Category</label>\r\n                     <InputLabel>Category</InputLabel>\r\n                     <Select value={formData.category} onChange={(e) => setFormData({ ...formData, category: e.target.value })}>\r\n                         {selectedCategories.map((c) => <MenuItem key={c.type} value={c.type}>{c.type}</MenuItem>)}\r\n                     </Select>\r\n                </FormControl>\r\n\r\n           </Grid>\r\n           <Grid item xs={6}>\r\n               <TextField type=\"number\" label=\"Amount\" fullwidth value={formData.amount} onChange={(e) => setFormData({ ...formData, amount: e.target.value })}/>\r\n           </Grid>\r\n           <Grid item xs={6}>\r\n               <TextField type=\"date\" label=\"Date\" fullwidth value={formData.date} onChange={(e) => setFormData({ ...formData, date: formatDate(e.target.value) })}/>\r\n           </Grid>\r\n           <Button className={classes.button} variant=\"outlined\" color=\"primary\" fullwidth onClick={createTransaction} >Create</Button>\r\n\r\n       </Grid>\r\n    )\r\n}\r\n\r\nexport default Form;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport { red, green } from '@material-ui/core/colors';\r\n\r\nexport default makeStyles((theme) => ({\r\n  avatarIncome: {\r\n    color: '#fff',\r\n    backgroundColor: green[500],\r\n  },\r\n  avatarExpense: {\r\n    color: theme.palette.getContrastText(red[500]),\r\n    backgroundColor: red[500],\r\n  },\r\n  list: {\r\n    maxHeight: '150px',\r\n    overflow: 'auto',\r\n  },\r\n}));","import React, { useContext } from 'react';\r\nimport { List as MUIList, ListItem, ListItemAvatar, ListItemText, Avatar, ListItemSecondaryAction, IconButton, Slide} from '@material-ui/core';\r\n\r\nimport useStyles from './styles'; \r\nimport { ExpenseTrackerContext } from '../../../../context/context';\r\nimport { Delete, MoneyOff } from '@material-ui/icons';\r\n\r\nconst List = () => {\r\n    const classes = useStyles();\r\n    const {deleteTransaction, transactions} = useContext(ExpenseTrackerContext);\r\n   \r\n\r\n\r\n    return (\r\n        <MUIList dense={false} className={classes.list}>\r\n             {transactions.map((transaction) => (\r\n                <Slide direction =\"down\" in mountonEnter unmountOnExit key={transaction.id}>\r\n                    <ListItem>\r\n                        <ListItemAvatar>\r\n                            <Avatar className={transaction.type === 'Income' ? classes.avatarIncome : classes.avatarExpense}>\r\n                                <MoneyOff />\r\n                            </Avatar>\r\n                        </ListItemAvatar>\r\n                        <ListItemText  primary={transaction.category} secondary={'$${transaction.amount} -${transaction.date} '} />\r\n                        <ListItemSecondaryAction>\r\n                            <IconButton edge=\"end\" araia-label=\"delete\" onClick={() => deleteTransaction(transaction.id)} >\r\n                                <Delete/>\r\n                            </IconButton>\r\n                        </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                </Slide> \r\n             ))}   \r\n        </MUIList>\r\n    );\r\n}\r\n\r\nexport default List;\r\n","import React from 'react'\r\n\r\nconst isIncome = Math.round(Math.random());\r\nconst InfoCard = () => {\r\n    return (\r\n        <div style={{ textAlign: 'center', padding: '0 10% '}}>\r\n            Try saying: <br />\r\n            Add {isIncome ? 'Income' : 'Expense'} \r\n            for {isIncome ? 'Rs 100' : 'Rs 50' } &ensp;\r\n            in Category &nbsp; {isIncome ? 'Business' : 'House'} \r\n            &nbsp;for {isIncome ? 'Monday' : 'Tuesday'} \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InfoCard\r\n","import React, { useContext } from 'react'\r\nimport { Card, CardHeader, CardContent, Typography,Grid ,Divider } from '@material-ui/core';\r\nimport useStyles from './styles';\r\nimport Form from './Form/Form';\r\nimport List from './List/List';\r\nimport { ExpenseTrackerContext } from '../../../context/context';\r\nimport Infocard from '../../InfoCard';\r\n\r\n\r\nconst Main = () => {\r\n    const classes = useStyles();\r\n    const { balance } =  useContext(ExpenseTrackerContext);\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardHeader title=\"Expense Tracker\" subheader=\"Powered by Speechly\"/>\r\n            <CardContent>\r\n                <Typography align=\"center\" variant=\"h5\">Total Balance RS {balance}</Typography>\r\n                <Typography variant=\"subtitle1\" style={{ lineHeight: '1.5em',marginTop: '20px' }}>\r\n                <Infocard />\r\n                </Typography>\r\n                <Divider className={ classes.divider } />\r\n                <Form />\r\n            </CardContent>\r\n            <CardContent>\r\n                <Grid className={classes,CardContent}>\r\n                <Grid item xs={12} >\r\n                    <List/>\r\n                </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  desktop: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  mobile: {\r\n    [theme.breakpoints.down('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  main: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      paddingBottom: '5%',\r\n    },\r\n  },\r\n  last: {\r\n    [theme.breakpoints.down('sm')]: {\r\n      marginBottom: theme.spacing(3),\r\n      paddingBottom: '200px',\r\n    },\r\n  },\r\n  grid: {\r\n    '& > *': {\r\n      margin: theme.spacing(2),\r\n    },\r\n  },\r\n}));","import React, { useEffect, useRef } from 'react'\nimport { Grid } from '@material-ui/core';\nimport { PushToTalkButton, PushToTalkButtonContainer,ErrorPanel } from '@speechly/react-ui';\nimport Details from './Components/Details/Details';\nimport Main from './Components/Details/Main/Main';\nimport useStyles from './styles';\nimport  { SpeechState, useSpeechContext } from '@speechly/react-client';\n\n\n\nconst App = () => {\n  const classes = useStyles();\n  const  { speechState  } = useSpeechContext();\n  const main = useRef(null);\n  const executeScroll = () => main.curret.scrollIntoView();\n\n  useEffect(() => { \n      if (speechState === SpeechState.Recording) {\n        executeScroll();\n      }\n  }, [speechState]);\n\n  return (\n    <div>\n      <Grid className={classes.grid} container spacing={0} alignItem='center' justify='center' style={{height: '100vh'}} >\n        <Grid item xs={12} sm={3} className={classes.mobile}>\n          <Details title=\"Income\" />\n        </Grid>\n        <Grid ef={main} item xs={12} sm={3} className={classes.main}>\n          <Main/>\n          </Grid>\n          <Grid item xs={12} sm={3} className={classes.desktop}>\n          <Details title=\"Income\" />\n          \n        </Grid>\n        <Grid item xs={12} sm={4} className={classes.last}>\n          <Details title=\"Expense\" />\n        </Grid>\n\n      </Grid>\n      <PushToTalkButtonContainer>\n        <PushToTalkButton />\n        <ErrorPanel />\n      </PushToTalkButtonContainer>\n    </div>\n  );\n}\n\nexport default App; \n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { SpeechProvider } from '@speechly/react-client';\nimport App from './App';\nimport { Provider } from './context/context';\n\nReactDOM.render(\n  <SpeechProvider appId=\"6eedd74e-8413-4a2c-bdff-364e5561076e\" language=\"en-US\">\n    <Provider>\n    <App />\n    </Provider>,\n    </SpeechProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}